// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $((function(_this) {
    return function() {
      return _this.Task = (function(_super) {
        __extends(Task, _super);

        function Task() {
          _this.sync = __bind(_this.sync, this);
          _this.initialize = __bind(_this.initialize, this);
          return Task.__super__.constructor.apply(this, arguments);
        }

        Task.prototype.initialize = function() {
          this.resources = new Resources;
          if (!this.isNew()) {
            this.resources.url = "" + (appServer.get('currentServer')) + "/objects/Task/" + (this.get('id')) + "/collections/resources";
            return this.resources.fetch();
          }
        };

        Task.prototype.urlRoot = function() {
          return "" + (appServer.get('currentServer')) + "/objects/Task";
        };

        Task.prototype.defaults = {
          task_id: null,
          description: '',
          project: null,
          project_title: '',
          completed: false,
          total_cost: 0,
          due_by: new Date().toJSON().slice(0, 10),
          created_at: null
        };

        Task.prototype.persistableAttributes = ['description', 'project', 'completed', 'due_by', 'priority', 'completed'];

        Task.prototype.sync = function(method, model, options) {
          Task.__super__.sync.apply(this, arguments);
          if (method === 'update') {
            return this.resources.save(this);
          }
        };

        return Task;

      })(RestfulModel);
    };
  })(this));

}).call(this);
