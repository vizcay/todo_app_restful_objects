// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $((function(_this) {
    return function() {
      return _this.ProjectRowView = (function(_super) {
        __extends(ProjectRowView, _super);

        function ProjectRowView() {
          _this.on_delete = __bind(_this.on_delete, this);
          _this.on_edit = __bind(_this.on_edit, this);
          _this.render = __bind(_this.render, this);
          return ProjectRowView.__super__.constructor.apply(this, arguments);
        }

        ProjectRowView.prototype.events = {
          'click #edit': 'on_edit',
          'click #delete': 'on_delete'
        };

        ProjectRowView.prototype.tagName = 'tr';

        ProjectRowView.prototype.template = _.template($('#project_row_template').html());

        ProjectRowView.prototype.render = function() {
          this.$el.html(this.template(this.model.attributes));
          return this;
        };

        ProjectRowView.prototype.on_edit = function() {
          return app.navigate("project_edit/" + (this.model.get('id')), {
            trigger: true
          });
        };

        ProjectRowView.prototype.on_delete = function() {
          if (confirm("Are you sure to delete project #" + (this.model.get('project_id')) + " and all associated tasks?")) {
            return this.model.destroy({
              wait: true,
              success: function() {
                return Backbone.history.loadUrl();
              }
            });
          }
        };

        return ProjectRowView;

      })(Backbone.View);
    };
  })(this));

}).call(this);
