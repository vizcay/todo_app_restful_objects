// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $((function(_this) {
    return function() {
      return _this.HomeView = (function(_super) {
        __extends(HomeView, _super);

        function HomeView() {
          _this.on_create_fixtures = __bind(_this.on_create_fixtures, this);
          _this.on_connect = __bind(_this.on_connect, this);
          _this.render = __bind(_this.render, this);
          return HomeView.__super__.constructor.apply(this, arguments);
        }

        HomeView.prototype.initialize = function() {
          appServer.on('change', this.render, this);
          return appServer.try_to_connect(appServer.get('currentServer'));
        };

        HomeView.prototype.events = {
          'click #connect': 'on_connect',
          'click #create_fixtures': 'on_create_fixtures'
        };

        HomeView.prototype.template = _.template($('#home_template').html());

        HomeView.prototype.render = function() {
          this.$el.html(this.template(appServer.attributes));
          return this;
        };

        HomeView.prototype.on_connect = function() {
          return appServer.try_to_connect(this.$('#current_server').val(), {
            success: this.on_connected_succesfully,
            error: (function(_this) {
              return function() {
                $('#modal-ajax-wait').modal('hide');
                alert('Unable to connect to server.');
                return _this.render();
              };
            })(this)
          });
        };

        HomeView.prototype.on_create_fixtures = function() {
          return app.navigate('create_fixtures', {
            trigger: true
          });
        };

        return HomeView;

      })(Backbone.View);
    };
  })(this));

}).call(this);
